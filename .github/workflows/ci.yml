# Taken from roblox-ts under the MIT license https://github.com/roblox-ts/roblox-ts/blob/master/.github/workflows/ci.yml

name: CI

on:
  pull_request:
  push:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.3.4

      - name: Install Foreman
        uses: rojo-rbx/setup-foreman@v1.0.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Selene
        run: selene src test benchmark
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.3.4

      - name: Run StyLua check
        uses: JohnnyMorganz/stylua-action@1.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --check src test benchmark
  unit-tests:
    name: Unit Tests
    runs-on: windows-latest
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.3.4

      - name: Install Foreman
        uses: rojo-rbx/setup-foreman@v1.0.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build test place
        run: rojo build test-runner.project.json -o test.rbxl

      - name: Download OpenVPN
        run: choco install openvpn

      - name: Run OpenVPN
        run: Start-Process -FilePath "C:\\Program Files\\OpenVPN\\bin\\openvpn.exe" -ArgumentList "--config $((Resolve-Path .\\client.ovpn).Path)"

      - name: Poll for IP Change
        run: |
          $elapsed = 0
          while ($true) {
            try {
              $response = Invoke-WebRequest -Uri 'https://httpbin.org/ip' -Method GET -UseBasicParsing
              $content = ConvertFrom-Json $response.Content
              if ($content.origin -eq "104.238.130.74") {
                break
              }
            } catch {}
            if ($elapsed -ge 25) {
              Write-Error "Timeout reached!"
              exit 1
            }
            Write-Output "Polling.. Elasped: $elapsed, IP: $($content.origin)"
            Start-Sleep 5
            $elapsed += 5
          }
          Write-Output "Success!"

      - name: Validate Cookie
        run: |
          $session = New-Object Microsoft.PowerShell.Commands.WebRequestSession
          $cookie = New-Object System.Net.Cookie
          $cookie.Name = ".ROBLOSECURITY"
          $cookie.Value = "${{ env.ROBLOSECURITY }}"
          $cookie.Domain = ".roblox.com"
          $session.Cookies.Add($cookie);
          Invoke-WebRequest "https://avatar.roblox.com/v1/avatar" -WebSession $session -UseBasicParsing

      - name: Install Roblox Studio
        uses: OrbitalOwen/roblox-win-installer-action@1.1
        with:
          # This cookie is intentionally public, because secrets are not available in pull request CI runs
          # It is from an empty account and not a security vulnerability
          cookie: ${{ secrets.ROBLOSECURITY || '_|WARNING:-DO-NOT-SHARE-THIS.--Sharing-this-will-allow-someone-to-log-in-as-you-and-to-steal-your-ROBUX-and-items.|}}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run tests
        shell: bash
        run: run-in-roblox --place test.rbxl --script test-runner/Run.client.lua > test-out.txt
        continue-on-error: true

      - name: Screenshot
        if: failure()
        uses: OrbitalOwen/desktop-screenshot-action@0.1
        with:
          file-name: 'desktop.jpg'

      - name: Check test status
        shell: bash
        run: cat test-out.txt | grep "0 failed, 0 skipped" || (cat test-out.txt && exit 1)
